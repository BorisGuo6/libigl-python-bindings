# From https://github.com/wjakob/nanobind_example/blob/master/.github/workflows/wheels.yml
name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - master
  release:
    types:
      - published

env:
  #CIBW_TEST_COMMAND: pytest {project}/tests
  #CIBW_TEST_REQUIRES: pytest
  CIBW_SKIP: "*-win32 *_i686 pp* cp36* cp311* pp* *musllinux*" # Skip 32-bit buildsa and PyPy, and 3.6(scipy) and 3.11(numpy) *musllinux*(scipy)
  CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=11.00
  CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz


  build_wheels:
    name: >
      Build wheels on ${{ matrix.os }}
      ${{ (matrix.os == 'macos-latest' && format('({0})', matrix.cibw-arch)) || '' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            cibw-arch: x86_64
          - os: macos-latest
            cibw-arch: arm64

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: actions/setup-python@v4
      name: Install Python
      with:
        python-version: '3.10'


    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel==2.11.2

    - name: Configure cibuildwheel
      shell: bash
      run: |
        CMAKE_ARCH="${{ matrix.cibw-arch == 'win32' && '-A Win32' || '' }}"
        CMAKE_OSX_ARCHITECTURES=${{ matrix.cibw-arch == 'macosx_x86_64' && 'x86_64' || matrix.cibw-arch == 'macosx_arm64' && 'arm64' || matrix.cibw-arch == 'macosx_universal2' && '"arm64;x86_64"' || '' }}
        echo "CIBW_ARCHS_MACOS=x86_64 arm64 universal2" >> $GITHUB_ENV
        echo "CIBW_BUILD=*-${{ matrix.cibw-arch }}" >> $GITHUB_ENV
        echo "**** CIBW_ENVIRONMENT_MACOS=CMAKE_OSX_ARCHITECTURES=\"$CMAKE_OSX_ARCHITECTURES\" ****"
        echo "CIBW_ENVIRONMENT_MACOS=CMAKE_OSX_ARCHITECTURES=\"$CMAKE_OSX_ARCHITECTURES\"" >> $GITHUB_ENV

   # Why didn't I need this before?
    - name: Build wheels
      run: |
        python -m cibuildwheel --output-dir wheelhouse

      #- name: Verify clean directory
      #  run: git diff --exit-code
      #  shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/setup-python@v2

    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
